from database import Base

from sqlalchemy import Column, Integer, Float, String, ForeignKey, Table, Text
from sqlalchemy.orm import relationship, backref


class CVSS(Base):
    __tablename__ = 'cvss'
    id = Column(Integer, primary_key=True)
    score = Column(Float)
    access_vector = Column(String)
    access_complexity = Column(String)
    authentication = Column(String)
    confidentiality_impact = Column(String)
    integrity_impact = Column(String)
    availability_impact = Column(String)


#association table
cpe_vulnerability = Table('cpe_vulnerability', Base.metadata,
                          Column('id_cpe', Integer, ForeignKey('cpe.id')),
                          Column('id_vulnerability', Integer, ForeignKey('vulnerability.id'))
)


class Vulnerability(Base):
    __tablename__ = 'vulnerability'

    id = Column(Integer, primary_key=True)
    cve = Column(String(20), index=True, unique=True)
    description = Column(Text)
    cvss_id = Column(Integer, ForeignKey('cvss.id'))

    cvss = relationship("CVSS", backref=backref('vulnerability', order_by=id))
    cpes = relationship('CPE', secondary=cpe_vulnerability, backref=backref('vulnerability', order_by=id))


class CPE(Base):
    __tablename__ = 'cpe'

    id = Column(Integer, primary_key=True)
    cpe_id = Column(String(100), unique=True, index=True)
